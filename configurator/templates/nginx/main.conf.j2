resolver 1.1.1.1 1.0.0.1;
map_hash_bucket_size 2048;

client_max_body_size 100M;

ssl_protocols TLSv1.2;
server_tokens off;

proxy_set_header Host $http_host;
proxy_ssl_name $http_host;
include /etc/nginx/includes/proxy.conf;

include /etc/nginx/includes/headers.conf;

log_format doridiancdn '$remote_addr - $remote_user [$time_local] '
                   '"$request" $status $body_bytes_sent '
                   '"$http_referer" "$http_user_agent" "$http_host"';

{%- for ip in dynConfig._ips|sort %}
set_real_ip_from {{ ip }};
{%- endfor %}

set_real_ip_from 127.0.0.0/8;

set_real_ip_from 10.0.0.0/8;
set_real_ip_from 172.16.0.0/12;
set_real_ip_from 192.168.0.0/16;

real_ip_recursive on;
real_ip_header X-Forwarded-For;

{%- set selfNetwork = dynConfig._find('network') %}

{%- for loc, locData in dynConfig._locations|dictsort %}
upstream location_{{ loc }} {
    {%- for server in locData|sort %}
        {%- set serverCfg = dynConfig[server] %}
        {%- if selfNetwork == serverCfg.network and selfNetwork in serverCfg.networkIp %}
    server {{ serverCfg.networkIp[selfNetwork] }};
        {%- else %}
    server {{ serverCfg.primaryIp }};
        {%- endif %}
    {%- endfor %}
}
{%- endfor %}

server {
    listen 80 default;
    listen [::]:80 default;
    listen 443 http2 ssl default;
    listen [::]:443 http2 ssl default;

    ssl_certificate {{ config.defaultCert }};
    ssl_certificate_key {{ config.defaultKey }};

    root /var/www/empty;

    include /etc/nginx/includes/wellknown.conf;
    include /etc/nginx/includes/securitytxt.conf;

    location / {
        error_log /var/log/nginx/invalid.error.log;
        access_log /var/log/nginx/invalid.access.log doridiancdn;
        return 404 "Site not found";
    }
}
